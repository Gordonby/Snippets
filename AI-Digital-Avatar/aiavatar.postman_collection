{
	"info": {
		"_postman_id": "1bc74fd7-83b2-489b-ad76-0cced2d5c050",
		"name": "Microsoft Speech Avatar",
		"description": "The Microsoft Azure AI services host a text to speech capability. It can provide a digital avatar that will read and gesture to the content you provide. The format it requires is SSML, which is an XML based markup language.\n\nThere is a python sdk for this, but for low iterations of videos - Postman http calls make much more sense.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "872050"
	},
	"item": [
		{
			"name": "SendJob",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", () => {\r",
							"  pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\"Test data type of the response\", () => {\r",
							"  pm.expect(jsonData).to.be.an(\"object\");\r",
							"  pm.expect(jsonData.id).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set(\"LastJobId\", pm.response.json().id);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{speechKey}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"inputKind\": \"SSML\",\r\n    \"inputs\": [\r\n        {\r\n            \"content\": \"<speak xmlns=\\\"http://www.w3.org/2001/10/synthesis\\\" xmlns:mstts=\\\"http://www.w3.org/2001/mstts\\\" xmlns:emo=\\\"http://www.w3.org/2009/10/emotionml\\\" version=\\\"1.0\\\" xml:lang=\\\"en-US\\\"><voice name=\\\"en-US-AvaNeural\\\"><prosody rate=\\\"+25.00%\\\" pitch=\\\"+4.00%\\\"><mstts:silence type=\\\"semicolon-exact\\\" value=\\\"250ms\\\" /><bookmark mark='gesture.number-one'/>;<s>Hello. This is a simple script that you can change. I'm sure there will be a better way of providing this content dynamically - but i've not refactored that yet. toodles.</s></prosody></voice></speak>\"\r\n        }\r\n    ],\r\n    \"avatarConfig\": {\r\n        \"talkingAvatarCharacter\": \"Meg\",\r\n        \"talkingAvatarStyle\": \"business\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{region}}.api.cognitive.microsoft.com/avatar/batchsyntheses/{{$guid}}?api-version=2024-04-15-preview",
					"protocol": "https",
					"host": [
						"{{region}}",
						"api",
						"cognitive",
						"microsoft",
						"com"
					],
					"path": [
						"avatar",
						"batchsyntheses",
						"{{$guid}}"
					],
					"query": [
						{
							"key": "api-version",
							"value": "2024-04-15-preview"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetLastJobStatus",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\"Test data type of the response\", () => {\r",
							"  pm.expect(jsonData).to.be.an(\"object\");\r",
							"  pm.expect(jsonData.id).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.status).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"pm.test(\"Job has finished\", () => {\r",
							"  pm.expect(jsonData.status).to.eql(\"Succeeded\");\r",
							"});\r",
							"\r",
							"pm.test(\"Job is SSML\", () => {\r",
							"  pm.expect(jsonData.inputKind).to.eql(\"SSML\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{speechKey}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{region}}.api.cognitive.microsoft.com/avatar/batchsyntheses/{{LastJobId}}?api-version=2024-08-01",
					"protocol": "https",
					"host": [
						"{{region}}",
						"api",
						"cognitive",
						"microsoft",
						"com"
					],
					"path": [
						"avatar",
						"batchsyntheses",
						"{{LastJobId}}"
					],
					"query": [
						{
							"key": "api-version",
							"value": "2024-08-01"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "region",
			"value": "northeurope",
			"type": "string"
		},
		{
			"key": "speechKey",
			"value": "",
			"type": "string"
		},
		{
			"key": "LastJobId",
			"value": "",
			"type": "string"
		}
	]
}
